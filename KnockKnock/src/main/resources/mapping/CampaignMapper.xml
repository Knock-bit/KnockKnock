<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 참고파일 나중에 삭제 -->
<mapper namespace="campaign">
	<!-- startDate지난 캠페인 실행시키기 -->
	<update id="updateStartCampaign">
		UPDATE CAMPAIGN
		   SET CI_STATUS = 1
		 WHERE SYSDATE > CI_STARTDATE
		   AND CI_STATUS = 0 
	</update>

	<!-- 진행중인 캠페인, 주최자 닉네임, 카테고리, 참여자수 불러오기 -->
	<select id="selectAllCampaign" resultType="CampaignVO">
		 SELECT C.*, U.U_NICKNAME  AS 
 		 HOST_NICKNAME,        
		 (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT  
 		FROM USERS U, CAMPAIGN C  WHERE CI_STATUS = 1  
 		AND U.U_IDX = C.U_IDX
		<!-- SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		AND C.CC_NAME = CC.CC_NAME -->
	</select>
	
	<!-- 최신순 -->
	<select id="selectCampaignListLatest" resultType="CampaignVO">
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME,
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		ORDER BY CI_STARTDATE DESC
		<!-- SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		AND C.CC_NAME = CC.CC_NAME
		ORDER BY CI_STARTDATE DESC -->
	</select>
	
	<!-- 참여자수순 -->
		<select id="selectCampaignListUserCount" resultType="CampaignVO">
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		ORDER BY USER_COUNT DESC
		<!-- SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		AND C.CC_NAME = CC.CC_NAME
		ORDER BY USER_COUNT DESC -->
	</select>
	
	<select id="selectCampaignUser" resultType="campaignUserVO">
		SELECT * FROM CAMPAIGN_USER
  		 WHERE U_IDX = #{uIdx}
  		   AND CI_IDX = #{ciIdx}
	</select>
	
	
	<!-- 캠페인 상세보기 -->
	<select id="selectOneCampaign" parameterType="int" resultType="CampaignVO">
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, U.U_IMGPATH
		FROM USERS U, CAMPAIGN C
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		AND C.CI_IDX = #{ciIdx}
	</select>
	
	<!-- 캠페인 상세보기 - 참여자 닉네임 불러오기 -->
	<select id="selectAllCampaignUsers" parameterType = "int" resultType ="CampaignUserVO">
		SELECT U_NICKNAME NICKNAME FROM USERS
  		 WHERE U_IDX IN (SELECT U_IDX FROM CAMPAIGN_USER
		 WHERE CI_IDX = #{ciIdx})
	</select>
	
	<select id="selectInputResult" parameterType="string" resultType="CampaignVO">
		SELECT * FROM CAMPAIGN
		WHERE CI_STATUS = 1
		  AND CI_TITLE LIKE '%'||#{input}||'%'
	</select>
	
		<!-- 기간이 만료됐는지 확인하여 만료 시 캠페인 상태를 0으로 바꾼다 -->
	<update id="updateExpiredCampaign">
		UPDATE CAMPAIGN
		   SET CI_STATUS = 2
		  WHERE SYSDATE > CI_ENDDATE
		   AND CI_STATUS = 1
	</update>
	
	<insert id="insertCampaignRank" parameterType="int">
		INSERT INTO CAMPAIGN_RANK(U_IDX, C_RANK, CI_IDX)
	    SELECT DISTINCT * FROM
	    (SELECT U_IDX, ROWNUM
	              FROM
	           (SELECT U_IDX, COUNT(U_IDX) FROM BOARD
	             WHERE CI_IDX = #{C_IDX}
	             GROUP BY U_IDX
	             ORDER BY COUNT(U_IDX) DESC)
	             WHERE ROWNUM <![CDATA[<=]]> 3)
	   INNER JOIN
	            ( SELECT * FROM
	            ( SELECT #{cIdx} FROM DUAL
	               UNION ALL
	              SELECT #{cIdx} FROM DUAL
	               UNION ALL
	              SELECT #{cIdx} FROM DUAL))
	    ON 1=1
	</insert>
	
	<select id="selectExpiredCampaign" resultType="int">
		SELECT CI_IDX 
		  FROM CAMPAIGN
		 WHERE CI_STATUS = 2
	</select>
	
	
	
	<!-- 1등에게 포인트 분배 -->
	<update id ="updateCampaignPointFirst" parameterType="int">
		     UPDATE USERS
		        SET U_TOT_POINT = U_TOT_POINT + (
		     SELECT REST_POINT * 0.4 AS FIRST 
		       FROM( SELECT (SELECT C_TOTPOINT - (300 * (SELECT COUNT(*)-3 FROM CAMPAIGN_USER WHERE CI_IDX= #{ciIdx}))
			                   FROM CAMPAIGN WHERE CI_IDX = #{ciIdx}) AS REST_POINT
			                   FROM DUAL))
		      WHERE U_IDX = (SELECT U_IDX
		                       FROM CAMPAIGN_RANK
		                      WHERE C_RANK = 1 AND CI_IDX = #{ciIdx})
	</update>
	
	
	<update id ="updateCampaignPointSecond" parameterType="int">
		     UPDATE USERS
		        SET U_TOT_POINT = U_TOT_POINT + (
		     SELECT REST_POINT * 0.35 AS Second 
		       FROM( SELECT (SELECT C_TOTPOINT - (300 * (SELECT COUNT(*)-3 FROM CAMPAIGN_USER WHERE CI_IDX= #{ciIdx}))
			                   FROM CAMPAIGN WHERE CI_IDX = #{ciIdx}) AS REST_POINT
			                   FROM DUAL))
		      WHERE U_IDX = (SELECT U_IDX
		                       FROM CAMPAIGN_RANK
		                      WHERE C_RANK = 2 AND CI_IDX = #{ciIdx})
		
	</update>
	
	<update id ="updateCampaignPointThird" parameterType="int">
		     UPDATE USERS
		        SET U_TOT_POINT = U_TOT_POINT + (
		     SELECT REST_POINT * 0.25 AS Second 
		       FROM( SELECT (SELECT C_TOTPOINT - (300 * (SELECT COUNT(*)-3 FROM CAMPAIGN_USER WHERE CI_IDX= #{ciIdx}))
			                   FROM CAMPAIGN WHERE CI_IDX = #{ciIdx}) AS REST_POINT
			                   FROM DUAL))
		      WHERE U_IDX = (SELECT U_IDX
		                       FROM CAMPAIGN_RANK
		                      WHERE C_RANK = 3 AND CI_IDX = #{ciIdx})
		
	</update>
	
	
	<update id= "updateCampaignPointRest" parameterType="int">
			UPDATE USERS
			   SET U_TOT_POINT = U_TOT_POINT + 300
			 WHERE U_IDX IN (SELECT U_IDX FROM CAMPAIGN_USER WHERE CI_IDX = #{ciIdx}
			 MINUS
			SELECT U_IDX FROM CAMPAIGN_RANK WHERE CI_IDX = #{ciIdx})
	</update>
	
	
	
	<update id="updateCampaignDistributed">
		UPDATE CAMPAIGN
		   SET CI_STATUS = 3
		 WHERE CI_STATUS = 2
		  AND  CI_IDX = #{ciIdx}
	</update>
	
	
	
	
	<!-- 종료된 캠페인 불러오기 -->
	<select id="selectAllEdCampaign" resultType="CampaignVO">
		<!-- SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 3
		AND U.U_IDX = C.U_IDX
		AND C.CC_NAME = CC.CC_NAME -->
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C
		WHERE CI_STATUS = 3
		AND U.U_IDX = C.U_IDX
	</select>

	
	
	
	<!--  ============= funding ============= -->
	
	<update id="updateStartFunding">
		UPDATE FUNDING
		   SET CF_STATUS = 1
		 WHERE SYSDATE > CF_STARTDATE
		   AND CF_STATUS = 0 
	</update>
	
	
	<select id="selectAllFunding" resultType="FundingVO">
		 SELECT F.*, U.U_NICKNAME AS HOST_NICKNAME,
	        (SELECT COUNT(*) FROM FUNDING_USER WHERE F.CF_IDX = FUNDING_USER.CF_IDX) USER_COUNT
			FROM USERS U, FUNDING F
			WHERE (CF_STATUS = 1 OR CF_STATUS = 2)
			AND U.U_IDX = F.U_IDX
	
	</select>
	
	
	<select id="selectFundingUser" parameterType = "int" resultType ="FundingUserVO">
		SELECT * FROM FUNDING_USER
		WHERE CF_IDX = #{cfIdx}	
		AND U_IDX = #{uIdx}
	</select>
	
	<!-- 펀딩 상세보기 -->
	<select id="selectOneFunding" parameterType="int" resultType="FundingVO">
		SELECT F.*, U.U_NICKNAME AS HOST_NICKNAME
		FROM USERS U, FUNDING F
		WHERE U.U_IDX = F.U_IDX
		AND F.CF_IDX = #{cfIdx}
	</select>
	<!-- 펀딩 상세보기 - 참여자 닉네임 불러오기 -->
	<select id="selectAllFundingUsers" parameterType = "int" resultType ="FundingUserVO">
		SELECT U_NICKNAME NICKNAME FROM USERS
  		 WHERE U_IDX IN (SELECT U_IDX FROM FUNDING_USER
		 WHERE CF_IDX = #{ciIdx})
	</select>
	
	
<!-- 	<insert id="insertCampaign" parameterType= "CampaignVO">
		INSERT INTO CAMPAIGN(CI_IDX, CI_TITLE, CI_CONTENT, C_GOAL, CI_ENDDATE, CI_STARTDATE, 
		CI_ESTIMATEDPOINT, CI_STATUS, CI_FILE, CI_EMBLEM, U_IDX, CC_NAME, C_TOTPOINT
		,CI_KEYWORD1, CI_KEYWORD2, CI_KEYWORD3, CI_BASEPOINT, CF_IDX) 
		VALUES (CI_IDX_SEQ.NEXTVAL, #{ciTitle}, #{ciContent}, #{cGoal}, #{ciEnddate}, #{ciStartdate}, 
		#{ciEstimatedpoint}, #{ciStatus}, #{ciFile}, #{ciEmblem}, #{uIdx}, #{ccIdx}, #{cTotpoint}
		,#{ciKeyword1}, #{ciKeyword2}, #{ciKeyword3}, #{ciBasepoint}, #{cfIdx}
		
	
	</insert> -->
	
	<!-- 기간이 만료됐는지 확인하여 만료 시 펀딩 상태를 3으로 바꾼다 -->
	<update id="updateExpiredFunding">
		UPDATE FUNDING
		   SET CF_STATUS = 3
		 WHERE SYSDATE > CF_ENDDATE
		   AND CF_STATUS = 1
	</update>
	
	
	<update id="updateSuccessFunding">
		UPDATE FUNDING
		   SET CF_STATUS = 2
		 WHERE SYSDATE <![CDATA[<=]]> CF_ENDDATE
		   AND CF_STATUS = 1
		   AND CF_COLLECTED <![CDATA[>=]]> CF_GOALPOINT
	</update>
	
	

	<insert id="insertFundingUser" parameterType="FundingUserVO">
		INSERT INTO FUNDING_USER (U_IDX, CF_IDX, CF_POINT)
		VALUES (#{uIdx}, #{cfIdx}, #{cfPoint})
	</insert>
	
	<update id="updateFundingPoint" parameterType ="FundingUserVO">
		UPDATE FUNDING
		   SET CF_COLLECTED = CF_COLLECTED + #{cfPoint}
		 WHERE CF_IDX = #{cfIdx}
	</update>
	
	<update id="updateUserFundingPoint" parameterType = "FundingUserVO">
		UPDATE USERS
		   SET U_USED_POINT = U_USED_POINT + #{cfPoint}
		 WHERE U_IDX = #{uIdx}
	</update>
	
	<insert id="updateUserPlusPointDetail" parameterType = "FundingUserVO">
		INSERT INTO POINT
            (U_IDX, PO_USED, PO_EARN, PO_DATE, PO_WHERE)
            VALUES( #{uIdx}, #{cfPoint}, 0, SYSDATE, 0)
	</insert>
	
	<insert id="updateUserMinusPointDetail" parameterType= "FundingUserVO">
			INSERT INTO POINT
            (U_IDX, PO_USED, PO_EARN, PO_DATE, PO_WHERE)
            VALUES( #{uIdx}, 0, #{cfPoint}, SYSDATE, 3)
	</insert>
	
	
	<delete id="deleteFundingUser" parameterType="FundingUserVO">
		DELETE FROM FUNDING_USER 
		 WHERE CF_IDX = #{cfIdx} 
		   AND U_IDX = #{uIdx}
	</delete>
	
	<update id="updateFundingPointMinus" parameterType ="FundingUserVO">
		UPDATE FUNDING
		   SET CF_COLLECTED = CF_COLLECTED - #{cfPoint}
		 WHERE CF_IDX = #{cfIdx}
	</update>
	
	<update id="updateUserFundingPointMinus" parameterType = "FundingUserVO">
		UPDATE USERS
		   SET U_USED_POINT = U_USED_POINT - #{cfPoint}
		 WHERE U_IDX = #{uIdx}
	</update>
	
	
	
	
	<!-- 제안서 제출 -->
	<insert id="insertProposal" parameterType="ProposalVO">
  		INSERT INTO PROPOSAL(CP_IDX, CP_REGDATE, CP_TITLE, CP_GOAL, CP_CONTENT, 
  							CP_GOALPOINT, CP_FILE, U_IDX,
  							CP_KEYWORD1, CP_KEYWORD2, CP_KEYWORD3)
					VALUES (PROPOSAL_IDX_SEQ.nextval, SYSDATE,  
							#{cpTitle}, #{cpGoal}, #{cpContent}, 
  							#{cpGoalpoint}, #{cpFile}, #{uIdx}, 
  							#{cpKeyword1}, #{cpKeyword2}, #{cpKeyword3})
  	</insert>
	
	
	
	
	
	
</mapper>