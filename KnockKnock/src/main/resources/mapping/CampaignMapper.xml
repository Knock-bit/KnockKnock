<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 참고파일 나중에 삭제 -->
<mapper namespace="campaign">
	<!-- startDate지난 캠페인 실행시키기 -->
	<update id="updateCampaign">
		UPDATE CAMPAIGN
		   SET CI_STATUS = 1
		  WHERE SYSDATE > CI_STARTDATE
	</update>

	<!-- 진행중인 캠페인, 주최자 닉네임, 카테고리, 참여자수 불러오기 -->
	<select id="selectAllCampaign" resultType="CampaignVO">
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		AND C.CC_IDX = CC.CC_IDX
	</select>
	
	<!-- 캠페인 상세보기 -->
	<select id="selectOneCampaign" parameterType="int" resultType="CampaignVO">
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 1
		AND U.U_IDX = C.U_IDX
		AND C.CI_IDX = #{ciIdx}
        AND C.CC_IDX = cc.cc_idx
	</select>
	
	<!-- 캠페인 상세보기 - 참여자 닉네임 불러오기 -->
	<select id="selectAllCampaignUsers" parameterType = "int" resultType ="CampaignUserVO">
		SELECT U_NICKNAME NICKNAME FROM USERS
  		 WHERE U_IDX IN (SELECT U_IDX FROM CAMPAIGN_USER
		 WHERE CI_IDX = #{ciIdx})
	</select>
	
		<!-- 기간이 만료됐는지 확인하여 만료 시 캠페인 상태를 0으로 바꾼다 -->
	<update id="updateExpiredCampaign">
		UPDATE CAMPAIGN
		   SET CI_STATUS = 2
		  WHERE SYSDATE > CI_ENDDATE
	</update>
	
	<!-- 종료된 캠페인 불러오기 -->
	<select id="selectAllEdCampaign" resultType="CampaignVO">
		SELECT C.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
        (SELECT COUNT(*) FROM CAMPAIGN_USER WHERE C.CI_IDX = CAMPAIGN_USER.ci_idx) USER_COUNT
		FROM USERS U, CAMPAIGN C, CAMPAIGN_CATEGORY CC
		WHERE CI_STATUS = 2
		AND U.U_IDX = C.U_IDX
		AND C.CC_IDX = CC.CC_IDX
	</select>

	
	
	
	<!--  ============= funding ============= -->
	<select id="selectAllFunding" resultType="FundingVO">
	
		SELECT F.*, U.U_NICKNAME AS HOST_NICKNAME, CC.CC_NAME AS CATEGORY, 
	        (SELECT COUNT(*) FROM FUNDING_USER WHERE F.CF_IDX = FUNDING_USER.CF_IDX) USER_COUNT
			FROM USERS U, FUNDING F, CAMPAIGN_CATEGORY CC
			WHERE CF_STATUS = 1
			AND U.U_IDX = F.U_IDX
			AND F.CC_IDX = CC.CC_IDX
	
	</select>
	
	
	<!-- 펀딩 상세보기 -->
	<select id="selectOneFunding" parameterType="int" resultType="FundingVO">
		SELECT F.*, U.U_NICKNAME AS HOST_NICKNAME
		FROM USERS U, FUNDING F
		WHERE CF_STATUS = 1
		AND U.U_IDX = F.U_IDX
		AND F.CF_IDX = #{cfIdx}
	</select>
	<!-- 펀딩 상세보기 - 참여자 닉네임 불러오기 -->
	<select id="selectAllFundingUsers" parameterType = "int" resultType ="FundingUserVO">
		SELECT U_NICKNAME NICKNAME FROM USERS
  		 WHERE U_IDX IN (SELECT U_IDX FROM CAMPAIGN_USER
		 WHERE CI_IDX = #{ciIdx})
	</select>
	
	
	
	<!-- 기간이 만료됐는지 확인하여 만료 시 펀딩 상태를 0으로 바꾼다 -->
	<update id="updateExpiredFunding">
		UPDATE FUNDING
		   SET CF_STATUS = 0
		  WHERE SYSDATE > END_DATE
	</update>
	
	
	<!-- 제안서 제출 -->
	<insert id="insertProposal" parameterType="ProposalVO">
  		INSERT INTO PROPOSAL(CP_IDX, CP_REGDATE, CP_TITLE, CP_GOAL, CP_CONTENT, 
  							CP_GOALPOINT, CP_FILE, U_IDX,
  							CP_KEYWORD1, CP_KEYWORD2, CP_KEYWORD3)
					VALUES (PROPOSAL_IDX_SEQ.nextval, SYSDATE,  
							#{cpTitle}, #{cpGoal}, #{cpContent}, 
  							#{cpGoalpoint}, #{cpFile}, #{uIdx}, 
  							#{cpKeyword1}, #{cpKeyword2}, #{cpKeyword3})
  	</insert>
	
	
	
	
	
	
	
	
</mapper>