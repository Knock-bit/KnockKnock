<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 참고파일 나중에 삭제 -->
<mapper namespace="Orders">
 	 <!-- 판매자별 주문리스트 뽑기 -->
	<select id="selectOrderList" parameterType="int" resultType="ordersVO">
		SELECT O_NUMBER, U_NAME, P.P_NAME, O.O_CNT, OS.OS_NAME,
		(O.O_TOTPRICE+O.O_FEE)AS TOTALWITHFEE, O.O_DATE
		FROM ORDERS O, USERS U, PRODUCT P, ORDERSTATUS OS
		WHERE O.S_IDX=#{sIdx} AND U.U_IDX = O.U_IDX AND O.OS_IDX=OS.OS_IDX
		AND P.P_IDX=O.P_IDX 
		ORDER BY O_DATE DESC
	</select>
	<!-- 일주일간 일별 매출 -->
	<select id="selectDailySales" parameterType="int" resultType="ordersVO">
		SELECT TO_CHAR(O_DATE, 'YYYY-MM-DD') AS SALESDATE, SUM(O_TOTPRICE) AS TOTAL
		FROM ORDERS 
		WHERE O_DATE >= TO_CHAR(SYSDATE-7, 'YYYY-MM-DD') AND S_IDX= #{sIdx}
		GROUP BY TO_CHAR(O_DATE, 'YYYY-MM-DD') 
		ORDER BY TO_CHAR(O_DATE, 'YYYY-MM-DD') DESC	
	</select>
	<!-- 일주일 매출 합계 -->
	<select id="selectDailyTot" parameterType="int" resultType="int">
		SELECT SUM(O_TOTPRICE) AS TOTAL
		FROM ORDERS 
		WHERE O_DATE >= TO_CHAR(SYSDATE-7, 'YYYY-MM-DD') AND S_IDX=#{sIdx}	
	</select>	
	<!-- 판매자별 누적 주문횟수 뽑기 -->
	<select id="countOrders" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM ORDERS WHERE S_IDX = #{sIdx}			
	</select>
	<!-- 판매자별 누적 총 주문금액 뽑기 -->
	<select id="totalRevenue" parameterType="int" resultType="int">
		SELECT SUM(O_TOTPRICE) FROM ORDERS WHERE S_IDX= #{sIdx}
	</select>
	<!-- 주문건당  -->
	<select id="avgTot" parameterType="int" resultType="int">
		SELECT AVG(O_TOTPRICE) FROM ORDERS WHERE S_IDX = #{sIdx}
	</select>
	<!-- 주문건수가 많은 고객보기 -->
	<select id="countGuest" parameterType="int" resultType="ordersVO">
		SELECT U.U_NAME, COUNT(*) AS COUNTNUM, SUM(O_TOTPRICE) AS ORDERTIMES, U.U_IMGPATH
		FROM ORDERS O, USERS U
		WHERE O.U_IDX = U.U_IDX AND S_IDX=#{sIdx}
		GROUP BY U.U_NAME, U.U_IMGPATH 
		ORDER BY COUNT(*) DESC
	</select>
	<!-- 1주일간 주문건수 (최근 1주전)-->
	<select id="countWeeklySales" parameterType="int" resultType="ordersVO">
		SELECT TO_CHAR(O_DATE, 'MM/DD') AS SDATE1, COUNT(*) AS C1
		FROM ORDERS 
		WHERE O_DATE >= TO_CHAR(SYSDATE-7, 'YYYY-MM-DD') AND S_IDX= #{sIdx}
		GROUP BY TO_CHAR(O_DATE, 'MM/DD') ORDER BY TO_CHAR(O_DATE, 'MM/DD')
	</select>
	<!-- 1주일간 주문건수 (최근 2주전)-->	
	<select id="countWeeklySales2" parameterType="int" resultType="ordersVO">
		SELECT TO_CHAR(O_DATE,'MM/DD') AS SDATE2, COUNT(*) AS C2
		FROM ORDERS 
		WHERE O_DATE >= TO_CHAR(SYSDATE-14, 'YYYY-MM-DD') AND O_DATE <![CDATA[<]]> TO_CHAR(SYSDATE-7, 'YYYY-MM-DD') 
		AND S_IDX= #{sIdx}
		GROUP BY TO_CHAR(O_DATE, 'MM/DD') ORDER BY TO_CHAR(O_DATE, 'MM/DD') 
	</select>
	<!-- 랭킹 -->
	<select id="sellerRank" resultType="ordersVO">
		SELECT R, S_IDX FROM
		(SELECT ROWNUM R, S_IDX, A.RANKCOUNT
			FROM(
				SELECT S.S_IDX, COUNT(*) AS RANKCOUNT
				FROM ORDERS O, SELLER S
				WHERE S.S_IDX= O.S_IDX
				GROUP BY  S.S_IDX ORDER BY COUNT(*) DESC 
			) A
		GROUP BY ROWNUM, S_IDX, a.rankcount ORDER BY ROWNUM)
		WHERE S_IDX = #{sIdx}
	</select>
	<!-- 판매자 등록일 -->
	<select id="selectRegdate" parameterType="int" resultType="String">
		SELECT S_REGDATE FROM SELLER WHERE S_IDX =#{sIdx}
	</select>
	
	<!-- 주문(order테이블) 업데이트(결제완료 후) -->
	<update id="orderInfo" parameterType="hashmap">
		UPDATE ORDERS
		SET O_STATUS = 1, F_CHECK = 1, PA_IDX = #{paIdx}, O_DATE = SYSDATE, O_TEMPNUM = #{oTempnum}
		WHERE U_IDX = #{uIdx} AND O_STATUS = 0
	</update>
		
	<!-- 임시 주문 데이터에 방금 결제한 주문정보 넣어놓기 -->
	<insert id="tempOrder" parameterType="string">
		INSERT INTO ORDERS_TEMP (OT_IDX, O_TEMPNUM)
		VALUES (OT_NUM_SEQ.nextval, #{oTempnum})
	
	</insert>
	<select id="oTempnum" resultType="string">
		SELECT O_TEMPNUM FROM ORDERS_TEMP
	
	</select>
	
	<!-- 수령인 정보 입력 -->
	<insert id="userOrder" parameterType="userOrderVO">
		INSERT INTO USER_ORDER 
		(G_IDX, O_ADDRESS1, O_ADDRESS2, O_PHONE,
			O_RECEIVER, O_ZIPCODE, U_IDX, O_DELIVERY, O_TEMPNUM)
		VALUES (G_IDX_SEQ.nextval, #{oAddress1}, #{oAddress2}, #{oPhone}, 
				#{oReceiver}, #{oZipcode}, #{uIdx}, #{oDelivery}, #{oTempnum})
	
	</insert>
	
	<!-- 주문확인서 내용 -->
	<!-- 주문 정보 가져오기 -->
	<select id="confirmationOrderInfo" resultType="ordersVO">
		SELECT O.*
		FROM ORDERS O, ORDERS_TEMP OT
		WHERE O.O_TEMPNUM = OT.O_TEMPNUM
	
	</select>
	<!-- 주문 정보에 대한 상품 정보 가져오기 -->
	<select id="confirmationProductInfo" resultType="productVO">
		SELECT P.*, A.O_TEMPNUM
		FROM PRODUCT P ,      
		(SELECT O.P_IDX, O.O_TEMPNUM
		FROM ORDERS O, ORDERS_TEMP OT
		WHERE O.O_TEMPNUM = OT.O_TEMPNUM) A
		WHERE P.P_IDX = A.P_IDX
	
	</select>
	<!-- 주문 정보에 대한 수령자 정보 가져오기 -->
	<select id="confirmationUserOrderInfo" resultType="userOrderVO">
		SELECT U.* 
		FROM USER_ORDER U,ORDERS_TEMP OT
		WHERE U.O_TEMPNUM = OT.O_TEMPNUM
	</select>
	
	<!-- 임시 데이터 삭제하기 전 데이터 유무 확인 -->
	<select id="deleteCheck" resultType="string">
		SELECT OT_IDX FROM ORDERS_TEMP 
	</select>
	
	<!-- 임시 데이터 삭제 -->
	<delete id="deleteOrderTemp">
		DELETE FROM ORDERS_TEMP
	</delete>
	<!-- 나의 주문내역 - 총 게시글 수 구하기 -->
	<select id="orderHistoryListCount" parameterType="UserVO" resultType="int">
		SELECT  COUNT(*)
		FROM PRODUCT P,
		(SELECT ROWNUM RN, B.* FROM 
		ORDERS B
		ORDER BY O_DATE DESC) O
        WHERE P.P_IDX = O.P_IDX
        AND O.U_IDX=#{uIdx}
	</select>
	<!-- 나의 주문내역 기간별 조회 - 총 게시글 수 구하기 -->
	<select id="orderHistoryListCountDay" parameterType="hashmap" resultType="int">
		SELECT  COUNT(*)
		FROM PRODUCT P,
		(SELECT ROWNUM RN, B.* FROM 
		ORDERS B
		ORDER BY O_DATE DESC) O
        WHERE P.P_IDX = O.P_IDX
        AND O.O_DATE BETWEEN TO_DATE(#{cal1},'YYYY-MM-DD') 
        AND TO_DATE(#{cal2}||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        AND O.U_IDX=#{uIdx}
	</select>
	<!-- 주문내역 -->
	<select id="orderHistoryList" parameterType="hashmap" resultType="ordersListVO">
		SELECT  P.P_NAME, P.P_IMG, P.P_DESC, P.P_PRICE, P.P_FEE,
				O.O_CNT, O.O_DATE, O_TEMPNUM, O.O_STATUS
		FROM PRODUCT P,
		(SELECT ROWNUM RN, B.* FROM 
		ORDERS B
		ORDER BY O_DATE DESC) O
        WHERE P.P_IDX = O.P_IDX
        AND RN BETWEEN #{start} AND #{end}
        AND O.U_IDX=#{uIdx}
		
	</select>
	<!-- 주문내역 기간별 조회 -->
	<select id="orderHistorysearchList" parameterType="hashmap" resultType="ordersListVO">
		SELECT ROWNUM RN,  P.P_NAME, P.P_IMG, P.P_DESC, P.P_PRICE, P.P_FEE,
				O.O_CNT, O.O_DATE, O_TEMPNUM, O.O_STATUS
		FROM PRODUCT P,
		(SELECT ROWNUM RN, B.* FROM 
		ORDERS B
		ORDER BY O_DATE DESC) O
        WHERE P.P_IDX = O.P_IDX
        AND O.O_DATE BETWEEN TO_DATE(#{cal1},'YYYY-MM-DD') 
            AND TO_DATE(#{cal2}||'23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        AND ROWNUM BETWEEN #{start} AND #{end}
        AND O.U_IDX=#{uIdx}
		
	</select>
	
	<!-- 주문 취소 -->
	<delete id="deleteOrders" parameterType="ordersVO">
		DELETE FROM ORDERS 
		WHERE U_IDX = #{uIdx} 
		AND O_TEMPNUM = #{oTempnum}
	
	</delete>
	
</mapper>